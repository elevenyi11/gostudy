// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.4.0
// source: seckill.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId     int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Source        string `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	AuthCode      string `protobuf:"bytes,3,opt,name=AuthCode,proto3" json:"AuthCode,omitempty"`
	SecTime       string `protobuf:"bytes,4,opt,name=SecTime,proto3" json:"SecTime,omitempty"`
	Nance         string `protobuf:"bytes,5,opt,name=Nance,proto3" json:"Nance,omitempty"`
	UserId        int64  `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserAuthSign  string `protobuf:"bytes,7,opt,name=UserAuthSign,proto3" json:"UserAuthSign,omitempty"`
	AccessTime    int64  `protobuf:"varint,8,opt,name=AccessTime,proto3" json:"AccessTime,omitempty"`
	ClientAddr    string `protobuf:"bytes,9,opt,name=ClientAddr,proto3" json:"ClientAddr,omitempty"`
	ClientRefence string `protobuf:"bytes,10,opt,name=ClientRefence,proto3" json:"ClientRefence,omitempty"`
}

func (x *SecRequest) Reset() {
	*x = SecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecRequest) ProtoMessage() {}

func (x *SecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecRequest.ProtoReflect.Descriptor instead.
func (*SecRequest) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{0}
}

func (x *SecRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SecRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SecRequest) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

func (x *SecRequest) GetSecTime() string {
	if x != nil {
		return x.SecTime
	}
	return ""
}

func (x *SecRequest) GetNance() string {
	if x != nil {
		return x.Nance
	}
	return ""
}

func (x *SecRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SecRequest) GetUserAuthSign() string {
	if x != nil {
		return x.UserAuthSign
	}
	return ""
}

func (x *SecRequest) GetAccessTime() int64 {
	if x != nil {
		return x.AccessTime
	}
	return 0
}

func (x *SecRequest) GetClientAddr() string {
	if x != nil {
		return x.ClientAddr
	}
	return ""
}

func (x *SecRequest) GetClientRefence() string {
	if x != nil {
		return x.ClientRefence
	}
	return ""
}

type SecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	UserId    int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Token     string `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	TokenTime int64  `protobuf:"varint,4,opt,name=TokenTime,proto3" json:"TokenTime,omitempty"`
	Code      int64  `protobuf:"varint,5,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *SecResponse) Reset() {
	*x = SecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecResponse) ProtoMessage() {}

func (x *SecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecResponse.ProtoReflect.Descriptor instead.
func (*SecResponse) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{1}
}

func (x *SecResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SecResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SecResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SecResponse) GetTokenTime() int64 {
	if x != nil {
		return x.TokenTime
	}
	return 0
}

func (x *SecResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_seckill_proto protoreflect.FileDescriptor

var file_seckill_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0xb0, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x32, 0x3e, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x4b, 0x69, 0x6c, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x4b, 0x69, 0x6c,
	0x6c, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_seckill_proto_rawDescOnce sync.Once
	file_seckill_proto_rawDescData = file_seckill_proto_rawDesc
)

func file_seckill_proto_rawDescGZIP() []byte {
	file_seckill_proto_rawDescOnce.Do(func() {
		file_seckill_proto_rawDescData = protoimpl.X.CompressGZIP(file_seckill_proto_rawDescData)
	})
	return file_seckill_proto_rawDescData
}

var file_seckill_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_seckill_proto_goTypes = []interface{}{
	(*SecRequest)(nil),  // 0: pb.SecRequest
	(*SecResponse)(nil), // 1: pb.SecResponse
}
var file_seckill_proto_depIdxs = []int32{
	0, // 0: pb.SecKillService.secKill:input_type -> pb.SecRequest
	1, // 1: pb.SecKillService.secKill:output_type -> pb.SecResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_seckill_proto_init() }
func file_seckill_proto_init() {
	if File_seckill_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_seckill_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_seckill_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_seckill_proto_goTypes,
		DependencyIndexes: file_seckill_proto_depIdxs,
		MessageInfos:      file_seckill_proto_msgTypes,
	}.Build()
	File_seckill_proto = out.File
	file_seckill_proto_rawDesc = nil
	file_seckill_proto_goTypes = nil
	file_seckill_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SecKillServiceClient is the client API for SecKillService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SecKillServiceClient interface {
	SecKill(ctx context.Context, in *SecRequest, opts ...grpc.CallOption) (*SecResponse, error)
}

type secKillServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSecKillServiceClient(cc grpc.ClientConnInterface) SecKillServiceClient {
	return &secKillServiceClient{cc}
}

func (c *secKillServiceClient) SecKill(ctx context.Context, in *SecRequest, opts ...grpc.CallOption) (*SecResponse, error) {
	out := new(SecResponse)
	err := c.cc.Invoke(ctx, "/pb.SecKillService/secKill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecKillServiceServer is the server API for SecKillService service.
type SecKillServiceServer interface {
	SecKill(context.Context, *SecRequest) (*SecResponse, error)
}

// UnimplementedSecKillServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSecKillServiceServer struct {
}

func (*UnimplementedSecKillServiceServer) SecKill(context.Context, *SecRequest) (*SecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SecKill not implemented")
}

func RegisterSecKillServiceServer(s *grpc.Server, srv SecKillServiceServer) {
	s.RegisterService(&_SecKillService_serviceDesc, srv)
}

func _SecKillService_SecKill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecKillServiceServer).SecKill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SecKillService/SecKill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecKillServiceServer).SecKill(ctx, req.(*SecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SecKillService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SecKillService",
	HandlerType: (*SecKillServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "secKill",
			Handler:    _SecKillService_SecKill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "seckill.proto",
}
